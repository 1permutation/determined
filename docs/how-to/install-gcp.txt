.. _install-gcp:

Install Determined on GCP
=========================
This document describes how to deploy a Determined cluster on Google
Cloud Platform (GCP). You can automatically deploy Determined on GCP
using `Terraform <https://learn.hashicorp.com/terraform/getting-started/install.html>`__.
Instructions for using the Determined module can be found in the
`Determined <https://github.com/determined-ai/determined>`__ GitHub repo, in ``/deploy/gcp``.

Additional information on the architecture of Determined in GCP can be found in the :ref:`topic_guide_gcp` topic guide.

Information from the GitHub repo is copied below for reference.

Requirements
~~~~~~~~~~~~

Download service account credentials and set the environment variable ``GOOGLE_CREDENTIALS`` to the path to the key JSON file.

.. code::

   export GOOGLE_CREDENTIALS=/path/to/key.json

The service account to be used with Terraform should have the following permissions:

- Cloud SQL Admin
- Compute Admin
- Compute Network Admin
- Security Admin
- Service Account Admin
- Service Account User
- Service Networking Admin
- Storage Admin

Install
~~~~~~~

1. Install `Terraform <https://learn.hashicorp.com/terraform/getting-started/install.html>`__.
2. Clone the repository.
3. In the repository, initialize Terraform.

   .. code :: sh

      terraform init

Update the ``defaults.auto.tfvars`` file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The ``defaults.auto.tfvars`` file contains configuration variables for the cluster. All required variables should be completed by the user (see table below for a description of the variables). All optional variables can be updated by the user as needed. When Terraform runs, it will apply the variables set in this file to the build.


Deploy a Determined cluster in GCP
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code::

    terraform apply

Required Variables
------------------

+--------------------------+-------------------------------------------------------+-------------------+
| Argument                 | Description                                           | Default Value     |
+==========================+=======================================================+===================+
| project_id               | The ID for the project.                               |                   |
+--------------------------+-------------------------------------------------------+-------------------+
| region                   | The region to create the resources in.                |                   |
+--------------------------+-------------------------------------------------------+-------------------+
| identifier               | An identifier string that will be appended to names.  |                   |
+--------------------------+-------------------------------------------------------+-------------------+
| version                  | The version of the software to be deployed.           |                   |
+--------------------------+-------------------------------------------------------+-------------------+
| environment_image        | The base image to use for deployment.                 |                   |
+--------------------------+-------------------------------------------------------+-------------------+

Optional Variables
------------------

Most standard deployments can leave the following variables as is.

+--------------------------+-------------------------------------------------------+-------------------+
| Argument                 | Description                                           | Default Value     |
+==========================+=======================================================+===================+
| creds                    | Path to credentials JSON file if not included in env. | null              |
+--------------------------+-------------------------------------------------------+-------------------+
| network                  | The name of the VPC network to create.                | to be created     |
+--------------------------+-------------------------------------------------------+-------------------+
| subnetwork               | The name of the subnetwork.                           | to be created     |
+--------------------------+-------------------------------------------------------+-------------------+
| gcs_bucket               | The GCS bucket to use.                                | to be created     |
+--------------------------+-------------------------------------------------------+-------------------+
| service_account_email    | The service account to use.                           | to be created     |
+--------------------------+-------------------------------------------------------+-------------------+
| zone                     | The zone to create resources in.                      | `region`-a        |
+--------------------------+-------------------------------------------------------+-------------------+
| create_static_ip         | Whether to create a static external IP for the master.| true              |
+--------------------------+-------------------------------------------------------+-------------------+
| create_database          | Whether to create a separate database for the master. | true              |
+--------------------------+-------------------------------------------------------+-------------------+
| master_machine_type      | The instance type for the master instance.            | n1-standard-16    |
+--------------------------+-------------------------------------------------------+-------------------+
| agent_machine_type       | The instance type for the agent instances.            | n1-standard-32    |
+--------------------------+-------------------------------------------------------+-------------------+
| gpu_type                 | The type of GPUs on the agent instances.              | nvidia-tesla-v100 |
+--------------------------+-------------------------------------------------------+-------------------+
| gpu_num                  | The number of GPUs per agent instance.                | 8                 |
+--------------------------+-------------------------------------------------------+-------------------+
| max_instances            | The maximum number of agent instances at any time.    | 8                 |
+--------------------------+-------------------------------------------------------+-------------------+
| preemptible              | Whether agent instances should be preemptible.        | false             |
+--------------------------+-------------------------------------------------------+-------------------+
| agent_docker_network     | The docker network to use for agent instances.        | determined        |
+--------------------------+-------------------------------------------------------+-------------------+
| master_docker_network    | The docker network to use for the master instance.    | determined        |
+--------------------------+-------------------------------------------------------+-------------------+
| max_idle_agent_period    | The time an agent can stay idle before it is removed. | 5m                |
+--------------------------+-------------------------------------------------------+-------------------+
| scheme                   | The URI scheme.                                       | http              |
+--------------------------+-------------------------------------------------------+-------------------+
| port                     | The port on the master to communicate on.             | 8080              |
+--------------------------+-------------------------------------------------------+-------------------+

**Notes**

The ``service_account_email`` referenced above is applied to each GCE instance to give them access to various resources. This service account is different from the service account used to deploy Terraform scripts. Ensure this service account has the following permissions:
- Compute Admin
- Service Account User

If setting the ``gcs_bucket`` in addition to the ``service_account_email``, ensure that the service account has read/write access to the bucket.

The following ``gcloud`` commands will help to validate your configuration, including resource availability in your desired region and zone:

.. code:: sh

    # Validate that the GCP Project ID exists
    gcloud projects list

    # Verify that the environment_image is listed
    gcloud compute images list --filter=name:<environment_image>

    # Check that a zone is available in the configured region
    gcloud compute zones list --filter=region:<region>

    # List the available machine types (for master_machine_type and agent_machine_type) in the configured zone
    gcloud compute machine-types list --filter=zone:<zone>

    # List the valid gpu_type values for the configured zone
    gcloud compute accelerator-types list --filter=zone:<zone>

De-provisioning the cluster
~~~~~~~~~~~~~~~~~~~~~~~~~~~

To bring down the cluster:

.. code::

    terraform destroy

.. warning::
  Terraform will not delete agents.  You must manually delete any running agents, which you can find by filtering for instances named ``det-agent-<identifier>-<version>-<random integer>-<pet name>``.

Next Steps
~~~~~~~~~~

- :ref:`pytorch-mnist-tutorial`
- :ref:`tf-mnist-tutorial`
- :ref:`tf-cifar-tutorial`
