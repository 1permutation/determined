-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module DetQL.Enum.Agent_user_groups_select_column exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| select columns of table "agent\_user\_groups"

  - Gid - column name
  - Group\_ - column name
  - Id - column name
  - Uid - column name
  - User\_ - column name
  - User\_id - column name

-}
type Agent_user_groups_select_column
    = Gid
    | Group_
    | Id
    | Uid
    | User_
    | User_id


list : List Agent_user_groups_select_column
list =
    [ Gid, Group_, Id, Uid, User_, User_id ]


decoder : Decoder Agent_user_groups_select_column
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "gid" ->
                        Decode.succeed Gid

                    "group_" ->
                        Decode.succeed Group_

                    "id" ->
                        Decode.succeed Id

                    "uid" ->
                        Decode.succeed Uid

                    "user_" ->
                        Decode.succeed User_

                    "user_id" ->
                        Decode.succeed User_id

                    _ ->
                        Decode.fail ("Invalid Agent_user_groups_select_column type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Agent_user_groups_select_column -> String
toString enum =
    case enum of
        Gid ->
            "gid"

        Group_ ->
            "group_"

        Id ->
            "id"

        Uid ->
            "uid"

        User_ ->
            "user_"

        User_id ->
            "user_id"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Agent_user_groups_select_column
fromString enumString =
    case enumString of
        "gid" ->
            Just Gid

        "group_" ->
            Just Group_

        "id" ->
            Just Id

        "uid" ->
            Just Uid

        "user_" ->
            Just User_

        "user_id" ->
            Just User_id

        _ ->
            Nothing
