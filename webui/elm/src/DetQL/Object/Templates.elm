-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module DetQL.Object.Templates exposing (..)

import CustomScalarCodecs
import DetQL.InputObject
import DetQL.Interface
import DetQL.Object
import DetQL.Scalar
import DetQL.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias ConfigOptionalArguments =
    { path : OptionalArgument String }


{-|

  - path - JSON select path

-}
config : (ConfigOptionalArguments -> ConfigOptionalArguments) -> SelectionSet CustomScalarCodecs.Jsonb DetQL.Object.Templates
config fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { path = Absent }

        optionalArgs =
            [ Argument.optional "path" filledInOptionals.path Encode.string ]
                |> List.filterMap identity
    in
    Object.selectionForField "CustomScalarCodecs.Jsonb" "config" optionalArgs (CustomScalarCodecs.codecs |> DetQL.Scalar.unwrapCodecs |> .codecJsonb |> .decoder)


name : SelectionSet String DetQL.Object.Templates
name =
    Object.selectionForField "String" "name" [] Decode.string
