-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module DetQL.Object.Steps exposing (..)

import CustomScalarCodecs
import DetQL.InputObject
import DetQL.Interface
import DetQL.Object
import DetQL.Scalar
import DetQL.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| An object relationship
-}
checkpoint : SelectionSet decodesTo DetQL.Object.Checkpoints -> SelectionSet (Maybe decodesTo) DetQL.Object.Steps
checkpoint object_ =
    Object.selectionForCompositeField "checkpoint" [] object_ (identity >> Decode.nullable)


end_time : SelectionSet (Maybe CustomScalarCodecs.Timestamptz) DetQL.Object.Steps
end_time =
    Object.selectionForField "(Maybe CustomScalarCodecs.Timestamptz)" "end_time" [] (CustomScalarCodecs.codecs |> DetQL.Scalar.unwrapCodecs |> .codecTimestamptz |> .decoder |> Decode.nullable)


id : SelectionSet Int DetQL.Object.Steps
id =
    Object.selectionForField "Int" "id" [] Decode.int


type alias MetricsOptionalArguments =
    { path : OptionalArgument String }


{-|

  - path - JSON select path

-}
metrics : (MetricsOptionalArguments -> MetricsOptionalArguments) -> SelectionSet (Maybe CustomScalarCodecs.Jsonb) DetQL.Object.Steps
metrics fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { path = Absent }

        optionalArgs =
            [ Argument.optional "path" filledInOptionals.path Encode.string ]
                |> List.filterMap identity
    in
    Object.selectionForField "(Maybe CustomScalarCodecs.Jsonb)" "metrics" optionalArgs (CustomScalarCodecs.codecs |> DetQL.Scalar.unwrapCodecs |> .codecJsonb |> .decoder |> Decode.nullable)


start_time : SelectionSet CustomScalarCodecs.Timestamptz DetQL.Object.Steps
start_time =
    Object.selectionForField "CustomScalarCodecs.Timestamptz" "start_time" [] (CustomScalarCodecs.codecs |> DetQL.Scalar.unwrapCodecs |> .codecTimestamptz |> .decoder)


state : SelectionSet CustomScalarCodecs.Step_state DetQL.Object.Steps
state =
    Object.selectionForField "CustomScalarCodecs.Step_state" "state" [] (CustomScalarCodecs.codecs |> DetQL.Scalar.unwrapCodecs |> .codecStep_state |> .decoder)


{-| An object relationship
-}
trial : SelectionSet decodesTo DetQL.Object.Trials -> SelectionSet decodesTo DetQL.Object.Steps
trial object_ =
    Object.selectionForCompositeField "trial" [] object_ identity


trial_id : SelectionSet Int DetQL.Object.Steps
trial_id =
    Object.selectionForField "Int" "trial_id" [] Decode.int


{-| An object relationship
-}
validation : SelectionSet decodesTo DetQL.Object.Validations -> SelectionSet (Maybe decodesTo) DetQL.Object.Steps
validation object_ =
    Object.selectionForCompositeField "validation" [] object_ (identity >> Decode.nullable)
