-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module DetQL.Object.Validations exposing (..)

import CustomScalarCodecs
import DetQL.InputObject
import DetQL.Interface
import DetQL.Object
import DetQL.Scalar
import DetQL.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| An object relationship
-}
checkpoint : SelectionSet decodesTo DetQL.Object.Checkpoints -> SelectionSet (Maybe decodesTo) DetQL.Object.Validations
checkpoint object_ =
    Object.selectionForCompositeField "checkpoint" [] object_ (identity >> Decode.nullable)


end_time : SelectionSet (Maybe CustomScalarCodecs.Timestamptz) DetQL.Object.Validations
end_time =
    Object.selectionForField "(Maybe CustomScalarCodecs.Timestamptz)" "end_time" [] (CustomScalarCodecs.codecs |> DetQL.Scalar.unwrapCodecs |> .codecTimestamptz |> .decoder |> Decode.nullable)


id : SelectionSet Int DetQL.Object.Validations
id =
    Object.selectionForField "Int" "id" [] Decode.int


{-| An object relationship
-}
metric_values : SelectionSet decodesTo DetQL.Object.Validation_metrics -> SelectionSet (Maybe decodesTo) DetQL.Object.Validations
metric_values object_ =
    Object.selectionForCompositeField "metric_values" [] object_ (identity >> Decode.nullable)


type alias MetricsOptionalArguments =
    { path : OptionalArgument String }


{-|

  - path - JSON select path

-}
metrics : (MetricsOptionalArguments -> MetricsOptionalArguments) -> SelectionSet (Maybe CustomScalarCodecs.Jsonb) DetQL.Object.Validations
metrics fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { path = Absent }

        optionalArgs =
            [ Argument.optional "path" filledInOptionals.path Encode.string ]
                |> List.filterMap identity
    in
    Object.selectionForField "(Maybe CustomScalarCodecs.Jsonb)" "metrics" optionalArgs (CustomScalarCodecs.codecs |> DetQL.Scalar.unwrapCodecs |> .codecJsonb |> .decoder |> Decode.nullable)


start_time : SelectionSet CustomScalarCodecs.Timestamptz DetQL.Object.Validations
start_time =
    Object.selectionForField "CustomScalarCodecs.Timestamptz" "start_time" [] (CustomScalarCodecs.codecs |> DetQL.Scalar.unwrapCodecs |> .codecTimestamptz |> .decoder)


state : SelectionSet CustomScalarCodecs.Validation_state DetQL.Object.Validations
state =
    Object.selectionForField "CustomScalarCodecs.Validation_state" "state" [] (CustomScalarCodecs.codecs |> DetQL.Scalar.unwrapCodecs |> .codecValidation_state |> .decoder)


{-| An object relationship
-}
step : SelectionSet decodesTo DetQL.Object.Steps -> SelectionSet (Maybe decodesTo) DetQL.Object.Validations
step object_ =
    Object.selectionForCompositeField "step" [] object_ (identity >> Decode.nullable)


step_id : SelectionSet Int DetQL.Object.Validations
step_id =
    Object.selectionForField "Int" "step_id" [] Decode.int


trial_id : SelectionSet Int DetQL.Object.Validations
trial_id =
    Object.selectionForField "Int" "trial_id" [] Decode.int
