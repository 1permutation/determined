const alphabeticalOrderConfig = {
  'order/properties-alphabetical-order': true,
};

// An alternative to alphabetical order where things are grouped by style function types.
/* eslint-disable @typescript-eslint/no-unused-vars */
const relatedGroupingOrderConfig = {
  'order/properties-order': [
    {
      groupName: 'display',
      emptyLineBefore: 'never',
      noEmptyLineBetween: true,
      properties: [ 'display' ],
    },
    {
      groupName: 'grid/flex',
      emptyLineBefore: 'always',
      noEmptyLineBetween: true,
      properties: [
        'align-content',
        'align-items',
        'align-self',
        'flex',
        'flex-basis',
        'flex-content',
        'flex-direction',
        'flex-flow',
        'flex-grow',
        'flex-shrink',
        'flex-wrap',
        'flex-flow',
        'grid',
        'grid-area',
        'grid-auto-columns',
        'grid-auto-flow',
        'grid-auto-rows',
        'grid-column',
        'grid-column-end',
        'grid-column-gap',
        'grid-column-start',
        'grid-gap',
        'grid-row',
        'grid-row-end',
        'grid-row-gap',
        'grid-row-start',
        'grid-template-areas',
        'grid-template-columns',
        'grid-template-rows',
        'justify-items',
        'order',
      ],
    },
    {
      groupName: 'box',
      emptyLineBefore: 'always',
      noEmptyLineBetween: true,
      properties: [
        'backface-visibility',
        'background',
        'background-attachment',
        'background-blend-mode',
        'background-clip',
        'background-color',
        'background-image',
        'background-origin',
        'background-position',
        'background-repeat',
        'background-size',
        'border',
        'border-bottom',
        'border-bottom-color',
        'border-bottom-style',
        'border-bottom-width',
        'border-collapse',
        'border-color',
        'border-image',
        'border-image-outset',
        'border-image-repeat',
        'border-image-slice',
        'border-image-source',
        'border-image-width',
        'border-left',
        'border-left-color',
        'border-left-style',
        'border-left-width',
        'border-right',
        'border-right-color',
        'border-right-style',
        'border-right-width',
        'border-style',
        'border-top',
        'border-top-color',
        'border-top-style',
        'border-top-width',
        'border-width',
        'box-sizing',
        'clear',
        'float',
        'outline',
        'outline-color',
        'outline-offset',
        'outline-style',
        'outline-width',
        'overflow',
        'overflow-x',
        'overflow-y',
        'pointer-events',
        'visibility',
      ],
    },
    {
      groupName: 'dimensions',
      emptyLineBefore: 'always',
      noEmptyLineBetween: true,
      properties: [
        'bottom',
        'clip',
        'clip-path',
        'height',
        'left',
        'margin',
        'margin-bottom',
        'margin-left',
        'margin-right',
        'margin-top',
        'max-height',
        'max-width',
        'min-height',
        'min-width',
        'padding',
        'padding-bottom',
        'padding-left',
        'padding-right',
        'padding-top',
        'position',
        'right',
        'top',
        'width',
        'z-index',
      ],
    },
    {
      groupName: 'text',
      emptyLineBefore: 'always',
      noEmptyLineBetween: true,
      properties: [
        'color',
        'content',
        'direction',
        'font',
        'font-display',
        'font-family',
        'font-size',
        'font-style',
        'font-variant',
        'font-weight',
        'letter-spacing',
        'line-height',
        'src',
        'text-align',
        'text-decoration',
        'text-indent',
        'text-shadow',
        'text-transform',
        'text-overflow',
        'unicode-bidi',
        'vertical-align',
        'white-space',
        'word-spacing',
      ],
    },
    {
      groupName: 'animation',
      emptyLineBefore: 'always',
      noEmptyLineBetween: true,
      properties: [
        'animation',
        'animation-delay',
        'animation-direction',
        'animation-duration',
        'animation-fill-mode',
        'animation-iteration-count',
        'animation-name',
        'animation-play-state',
        'animation-timing-function',
      ],
    },
  ],
};
/* eslint-enable @typescript-eslint/no-unused-vars */

module.exports = {
  extends: [
    'stylelint-config-standard',
    'stylelint-config-styled-components',
  ],
  plugins: [ 'stylelint-order' ],
  rules: {
    // stylelint rules
    'at-rule-semicolon-space-before': 'never',
    'custom-property-empty-line-before': 'never',
    'declaration-block-semicolon-space-before': 'never',
    'declaration-block-semicolon-newline-after': 'always-multi-line',
    'declaration-block-semicolon-newline-before': 'never-multi-line',
    'declaration-block-trailing-semicolon': null,
    'declaration-empty-line-before': 'never',
    'function-name-case': [
      'lower',
      { ignoreFunctions: [ '/^\\$\\{(if|ifNot|switch)Prop/', /^get/i ] },
    ],
    'value-keyword-case': null,
    'no-eol-whitespace': [ true, { ignore: [ 'empty-lines' ] } ],
    'no-extra-semicolons': true,
    'rule-empty-line-before': 'never',

    // stylelint-order rules
    'order/order': [
      'custom-properties',
      'dollar-variables',
      'at-variables',
      'declarations',
      'rules',
      'at-rules',
      'less-mixins',
    ],
    ...alphabeticalOrderConfig,
  },
};
